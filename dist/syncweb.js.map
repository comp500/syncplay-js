{"version":3,"sources":["syncweb.js","index.js","EventEmitter.js","WebSocketProtocol.js","export.js"],"names":["SyncWeb","callback","totalList","e","file","ready","isReady","manuallyInitiated","username","console","version","realversion","features","motd","connectedString","Object","name","message","output","packet","window"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACAA;ADWA;AACA;AEbA;AAAA;AFgBA;AEfA;AACA;AACA;AFiBA;AACA;AACA;AACA;AEjBA;AACA;AACA;AACA;AACA;AFmBA;AACA;AACA;AEnBA;AFqBA;AEpBA;AACAC;AACA;AACA;AACA;AACA;AFsBA;AACA;AACA;AErBA;AACA;AFuBA;AACA;AACA;AEtBA;AFwBA;AEtBA;AACA;AACAC;AACA;AACAA;AACA;AACAA;AACA;AACA;AACA;AFwBA;AEtBA;AACAA;AACA;AFwBA;AEtBA;AACA;AFwBA;AACA;AACA;AEvBA;AACA;AFyBA;AEvBA;AACA;AACA;AFyBA;AACA;AACA;AACA;AACA;AE1BAF;ACvDA;AHoFA;AACA;AACA;AACA;AGpFA;AAAA;AHuFA;AGvFA;AHyFA;AGtFA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAUA;AHyFA;AGvFA;AHyFA;AACA;AACA;AACA;AG1FA;AH4FA;AG3FA;AH6FA;AG3FA;AACAC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AH6FA;AG3FA;AACA;AACAE;AACA;AACA;AACA;AACA;AACA;AACA;AH6FA;AACA;AACA;AG5FA;AACA;AACA;AACA;AH8FA;AACA;AACA;AG7FA;AACA;AH+FA;AACA;AACA;AG9FA;AACA;AHgGA;AACA;AACA;AG/FA;AACA;AACA;AACA;AHiGA;AACA;AACA;AGhGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AHkGA;AACA;AACA;AGjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC;AADA;AADA;AAKA;AACA;AHmGA;AACA;AACA;AGlGA;AACAC;AACA;AACA;AACA;AACA;AACAC;AACAC;AACAC;AAHA;AADA;AADA;AASA;AACA;AHoGA;AGlGA;AHoGA;AACA;AACA;AACA;AGpGA;AACAC;AHsGA;AGpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AHsGA;AGpGA;AACA;AHsGA;AACA;AACA;AGrGAA;AACA;AACA;AHuGA;AACA;AACA;AGtGAA;AACA;AACA;AACAC;AACAC;AACAC;AACAC;AAJA;AAMA;AACA;AACAC;AAEA;AACA;AACA;AACA;AHuGA;AACA;AACA;AGvGA;AHyGA;AGxGAL;AACA;AACA;AACAM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AH0GA;AGxGA;AACA;AACA;AH0GA;AGxGA;AACA;AACA;AH0GA;AACA;AACA;AG1GA;AH4GA;AG3GA;AACAA;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;AH6GA;AACA;AACA;AG5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AH8GA;AACA;AACA;AG7GA;AACAC;AACAC;AAFA;AAIA;AH+GA;AACA;AACA;AG9GA;AACA;AACAC;AHgHA;AG9GA;AACAA;AACAA;AACAA;AACA;AACAA;AACA;AACA;AACA;AHgHA;AG9GAA;AACAA;AACAA;AACAA;AHgHA;AG9GA;AAAA;AACA;AACA;AHiHA;AG/GA;AACAA;AACA;AACAA;AACA;AACA;AACA;AACAA;AACA;AACA;AHiHA;AG/GAT;AHiHA;AG/GA;AACA;AHiHA;AACA;AACA;AGhHA;AACA;AHkHA;AGhHA;AACA;AACAD;AACA;AACAQ;AADA;AAGA;AALA;AADA;AH0HA;AGhHA;AACAG;AACA;AHkHA;AGhHA;AACA;AHkHA;AACA;AACA;AGjHA;AACA;AHmHA;AACA;AACA;AACA;AACA;AGpHAnB;AClTAoB","file":"syncweb.js","sourcesContent":[null,"/* eslint-disable no-unused-vars */\r\nlet SyncWeb = {};\r\nSyncWeb.util = {};","class EventEmitter {\r\n\tconstructor() {\r\n\t\tthis.eventList = {};\r\n\t\tthis.activeEvents = true;\r\n\t}\r\n\r\n\ton(name, callback) {\r\n\t\tif (this.eventList[name] == null) {\r\n\t\t\tthis.eventList[name] = [];\r\n\t\t}\r\n\t\tthis.eventList[name].push(callback);\r\n\t}\r\n\r\n\tonce(name, callback) {\r\n\t\tlet modifiedCallback = (data) => {\r\n\t\t\tcallback(data);\r\n\t\t\tthis.removeListener(name, modifiedCallback);\r\n\t\t};\r\n\t\tthis.on(name, modifiedCallback);\r\n\t}\r\n\r\n\tany(callback) {\r\n\t\tthis.on(\"*\", callback);\r\n\t}\r\n\r\n\temit(name, data) {\r\n\t\tif (!this.activeEvents) return 0;\r\n\r\n\t\tlet totalList;\r\n\t\tif (this.eventList[name] && this.eventList[\"*\"]) {\r\n\t\t\ttotalList = this.eventList[name].concat(this.eventList[\"*\"]);\r\n\t\t} else if (this.eventList[name]) {\r\n\t\t\ttotalList = this.eventList[name];\r\n\t\t} else if (this.eventList[\"*\"]) {\r\n\t\t\ttotalList = this.eventList[\"*\"]\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < totalList.length; i++) {\r\n\t\t\ttotalList[i](name, data);\r\n\t\t}\r\n\r\n\t\treturn totalList.length;\r\n\t}\r\n\r\n\tremoveListener(name, callback) {\r\n\t\t// TODO: find a way to gracefully report problems like this\r\n\t\tif (!this.eventList[name]) return;\r\n\r\n\t\tlet index = this.eventList[name].indexOf(callback);\r\n\t\tif (index > -1) this.eventList.splice(index, 1);\r\n\t}\r\n}\r\n\r\nSyncWeb.util.EventEmitter = EventEmitter;","/* global EventEmitter */\r\n\r\nclass WebSocketProtocol extends EventEmitter {\r\n\tconstructor() {\r\n\t\tsuper(\"WebSocket-builtin\");\r\n\r\n\t\tthis.currentPosition = 0.0;\r\n\t\tthis.paused = true;\r\n\t\tthis.doSeek = false;\r\n\t\tthis.isReady = false;\r\n\t\tthis.roomdetails = {};\r\n\t\tthis.clientIgnoringOnTheFly = 0;\r\n\t\tthis.serverIgnoringOnTheFly = 0;\r\n\t}\r\n\r\n\t// Public API\r\n\r\n\tconnect(options, callback) {\r\n\t\tthis.socket = new WebSocket(options.url);\r\n\r\n\t\tthis.socket.addEventListener(\"open\", () => {\r\n\t\t\tcallback();\r\n\t\t\tif (options.password) {\r\n\t\t\t\tthis.sendHello(options.name, options.room, options.password);\r\n\t\t\t} else {\r\n\t\t\t\tthis.sendHello(options.name, options.room);\r\n\t\t\t}\r\n\t\t\tthis.sendReady();\r\n\t\t\tthis.sendListRequest();\r\n\t\t\tif (this.currentFile) {\r\n\t\t\t\tthis.sendFile();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.socket.addEventListener(\"message\", (e) => {\r\n\t\t\tthis.emit(\"message\", e.data);\r\n\t\t\te.data.split(\"\\n\").forEach(messageText => {\r\n\t\t\t\tif (messageText == null) return;\r\n\t\t\t\tif (messageText.length < 1) return;\r\n\t\t\t\tthis.parseMessage(messageText);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tdisconnect() {\r\n\t\tif (this.socket) {\r\n\t\t\tthis.socket.close();\r\n\t\t}\r\n\t}\r\n\r\n\tsendData(data) {\r\n\t\tthis.socket.send(JSON.stringify(data));\r\n\t}\r\n\r\n\tsetTime(position) {\r\n\t\tthis.currentPosition = position;\r\n\t}\r\n\r\n\tseekTo(position) {\r\n\t\tthis.setTime(position);\r\n\t\tthis.doSeek = true;\r\n\t\tthis.sendState();\r\n\t}\r\n\r\n\tsetPause(pause) {\r\n\t\tthis.paused = pause;\r\n\t\tif (!pause && !this.isReady) {\r\n\t\t\t// potential problem: unpause is sent from video.play()\r\n\t\t\t// could result in unintentional ready setting\r\n\t\t\tthis.isReady = true;\r\n\t\t\tthis.sendReady();\r\n\t\t}\r\n\t\tthis.sendState();\r\n\t}\r\n\r\n\tsendFile(duration, name) {\r\n\t\tif (name) {\r\n\t\t\t// TODO size attribute for non-html5 video players?\r\n\t\t\t// 0 means unknown duration\r\n\t\t\tif (!duration) duration = 0;\r\n\t\t\tthis.currentFile = {duration, name, size: 0};\r\n\t\t}\r\n\t\tthis.sendData({\r\n\t\t\t\"Set\": {\r\n\t\t\t\tfile: this.currentFile\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.sendListRequest();\r\n\t}\r\n\r\n\tsendReady(ready) {\r\n\t\tif (ready == undefined || ready == null) {\r\n\t\t\tready = this.isReady;\r\n\t\t}\r\n\t\tlet packet = {\r\n\t\t\t\"Set\": {\r\n\t\t\t\t\"ready\": {\r\n\t\t\t\t\tisReady: ready,\r\n\t\t\t\t\tmanuallyInitiated: true,\r\n\t\t\t\t\tusername: this.currentUsername\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.sendData(packet);\r\n\t}\r\n\r\n\t// Private API\r\n\r\n\tparseMessage(message) {\r\n\t\tlet parsed = JSON.parse(message);\r\n\t\tconsole.log(\"SERVER:\", parsed); // eslint-disable-line no-console\r\n\r\n\t\tif (parsed.Error) {\r\n\t\t\tthis.parseError(parsed.Error);\r\n\t\t}\r\n\t\tif (parsed.Hello) {\r\n\t\t\tthis.parseHello(parsed.Hello);\r\n\t\t}\r\n\t\tif (parsed.Set) {\r\n\t\t\tthis.parseSet(parsed.Set);\r\n\t\t}\r\n\t\tif (parsed.List) {\r\n\t\t\tthis.parseList(parsed.List);\r\n\t\t}\r\n\t\tif (parsed.State) {\r\n\t\t\tthis.parseState(parsed.State);\r\n\t\t}\r\n\t\tif (parsed.Chat) {\r\n\t\t\tthis.parseChat(parsed.Chat);\r\n\t\t}\r\n\r\n\t\tthis.sendState();\r\n\t}\r\n\r\n\tparseError(data) {\r\n\t\tconsole.log(\"err\", data); // eslint-disable-line no-console\r\n\t\t// TODO disconnect\r\n\t}\r\n\r\n\tparseHello(data) {\r\n\t\tconsole.log(\"hello\", data); // eslint-disable-line no-console\r\n\t\t// TODO handle failed logins, etc.\r\n\t\tthis.serverDetails = {\r\n\t\t\tversion: data.version,\r\n\t\t\trealversion: data.realversion,\r\n\t\t\tfeatures: data.features,\r\n\t\t\tmotd: data.motd\r\n\t\t};\r\n\t\tlet connectedString = `Connected to server, version ${data.version}.`;\r\n\t\tif (data.motd) {\r\n\t\t\tconnectedString += ` MOTD:\r\n\t\t\t${data.motd}`;\r\n\t\t}\r\n\t\tthis.emit(\"connected\", connectedString);\r\n\t\t// roomEventRequest?\r\n\t}\r\n\r\n\tparseSet(data) {\r\n\t\tconsole.log(\"set\", data); // eslint-disable-line no-console\r\n\t\t// TODO playlists\r\n\t\tif (data.user) {\r\n\t\t\tObject.keys(data.user).forEach((key) => {\r\n\t\t\t\tlet user = data.user[key];\r\n\t\t\t\tif (user.event) {\r\n\t\t\t\t\tif (user.event.joined) {\r\n\t\t\t\t\t\tthis.emit(\"joined\", key);\r\n\t\t\t\t\t\tthis.roomdetails[key] = {room: user.room.name};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (user.event.left) {\r\n\t\t\t\t\t\tthis.emit(\"left\", key);\r\n\t\t\t\t\t\tdelete this.roomdetails[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.roomdetails[key] && this.roomdetails[key].room != user.room.name) {\r\n\t\t\t\t\t\t// user has moved\r\n\t\t\t\t\t\tthis.roomdetails[key].room = user.room.name;\r\n\t\t\t\t\t\tthis.emit(\"moved\", {\"user\": key, \"room\": user.room.name});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (user.file) {\r\n\t\t\t\t\tthis.roomdetails[key].file = user.file;\r\n\t\t\t\t}\r\n\t\t\t\tthis.emit(\"roomdetails\", this.roomdetails);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (data.ready) {\r\n\t\t\tthis.roomdetails[data.ready.username].isReady = data.ready.isReady;\r\n\t\t\tthis.roomdetails[data.ready.username].manuallyInitiated = data.ready.manuallyInitiated;\r\n\r\n\t\t\tthis.emit(\"roomdetails\", this.roomdetails);\r\n\t\t}\r\n\t}\r\n\r\n\tparseList(data) {\r\n\t\tthis.roomdetails = {};\r\n\t\tObject.keys(data).forEach((room) => {\r\n\t\t\tObject.keys(data[room]).forEach((user) => {\r\n\t\t\t\tthis.roomdetails[user] = data[room][user];\r\n\t\t\t\tthis.roomdetails[user].room = room;\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.emit(\"roomdetails\", data);\r\n\t}\r\n\r\n\tparseState(data) {\r\n\t\tif (data.ping.yourLatency != null) {\r\n\t\t\tthis.clientRtt = data.ping.yourLatency;\r\n\t\t}\r\n\t\tthis.latencyCalculation = data.ping.latencyCalculation;\r\n\t\tif (data.ignoringOnTheFly && data.ignoringOnTheFly.server) {\r\n\t\t\tthis.serverIgnoringOnTheFly = data.ignoringOnTheFly.server;\r\n\t\t\tthis.clientIgnoringOnTheFly = 0;\r\n\t\t\tthis.stateChanged = false;\r\n\t\t}\r\n\t\tif (data.playstate) {\r\n\t\t\tif (data.playstate.setBy && data.playstate.setBy != this.currentUsername) {\r\n\t\t\t\tif (data.playstate.doSeek && !this.doSeek) {\r\n\t\t\t\t\tthis.emit(\"seek\", data.playstate.position);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.paused != data.playstate.paused) {\r\n\t\t\t\t\tif (data.playstate.paused) {\r\n\t\t\t\t\t\tthis.emit(\"pause\");\r\n\t\t\t\t\t\tthis.paused = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.emit(\"unpause\");\r\n\t\t\t\t\t\tthis.paused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseChat(data) {\r\n\t\tthis.emit(\"chat\", {\r\n\t\t\tname: data.username,\r\n\t\t\tmessage: data.message\r\n\t\t});\r\n\t}\r\n\r\n\tsendState() {\r\n\t\tlet clientIgnoreIsNotSet = (this.clientIgnoringOnTheFly == 0 || this.serverIgnoringOnTheFly != 0);\r\n\t\tlet output = {};\r\n\t\toutput.State = {};\r\n\r\n\t\tif (clientIgnoreIsNotSet) {\r\n\t\t\toutput.State.playstate = {};\r\n\t\t\toutput.State.playstate.position = this.currentPosition;\r\n\t\t\toutput.State.playstate.paused = this.paused;\r\n\t\t\tif (this.doSeek) {\r\n\t\t\t\toutput.State.playstate.doSeek = true;\r\n\t\t\t\tthis.doSeek = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\toutput.State.ping = {};\r\n\t\toutput.State.ping.latencyCalculation = this.latencyCalculation;\r\n\t\toutput.State.ping.clientLatencyCalculation = Date.now() / 1000;\r\n\t\toutput.State.ping.clientRtt = this.clientRtt;\r\n\r\n\t\tif (this.stateChanged) { // TODO update this properly\r\n\t\t\tthis.clientIgnoringOnTheFly += 1;\r\n\t\t}\r\n\r\n\t\tif (this.serverIgnoringOnTheFly > 0 || this.clientIgnoringOnTheFly > 0) {\r\n\t\t\toutput.State.ignoringOnTheFly = {};\r\n\t\t\tif (this.serverIgnoringOnTheFly > 0) {\r\n\t\t\t\toutput.State.ignoringOnTheFly.server = this.serverIgnoringOnTheFly;\r\n\t\t\t\tthis.serverIgnoringOnTheFly = 0;\r\n\t\t\t}\r\n\t\t\tif (this.clientIgnoringOnTheFly > 0) {\r\n\t\t\t\toutput.State.ignoringOnTheFly.client = this.clientIgnoringOnTheFly;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.log(output); // eslint-disable-line no-console\r\n\r\n\t\tthis.sendData(output);\r\n\t}\r\n\r\n\tsendHello(username, room, password) {\r\n\t\tthis.currentUsername = username;\r\n\t\tthis.currentRoom = room;\r\n\r\n\t\tlet packet = {\r\n\t\t\t\"Hello\": {\r\n\t\t\t\tusername,\r\n\t\t\t\t\"room\": {\r\n\t\t\t\t\tname: room\r\n\t\t\t\t},\r\n\t\t\t\t\"version\": \"1.5.1\"\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (password) {\r\n\t\t\tpacket.Hello.password = password;\r\n\t\t}\r\n\r\n\t\tthis.sendData(packet);\r\n\t}\r\n\r\n\tsendListRequest() {\r\n\t\tthis.sendData({\"List\": null});\r\n\t}\r\n}\r\n\r\nSyncWeb.Client = WebSocketProtocol;","window.SyncWeb = SyncWeb;"]}