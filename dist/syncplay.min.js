!function(){"use strict";var t=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}();function e(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function r(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var o={};o.util={};var i={get:function(t,e){return"string"==typeof e?t.find(function(t){return t.name==e}):t.includes(e)?e:void 0},remove:function(t,e){var r=void 0;(r="string"==typeof e?t.findIndex(function(t){return t.name==e}):t.indexOf(e))>-1&&t.splice(r,1)}};o.util.ArrayHandlers=i;var s=function(){function e(){n(this,e),this.eventList={},this.activeEvents=!0}return t(e,[{key:"on",value:function(t,e){null==this.eventList[t]&&(this.eventList[t]=[]),this.eventList[t].push(e)}},{key:"once",value:function(t,e){var r=this;this.on(t,function n(o){e(o),r.removeListener(t,n)})}},{key:"any",value:function(t){this.on("*",t)}},{key:"emit",value:function(t,e){if(!this.activeEvents)return 0;if(!this.eventList[t])return 0;for(var r=0;r<this.eventList[t].length;r++)this.eventList[t](e);if(this.eventList["*"]&&this.eventList["*"].length>0){for(var n=0;n<this.eventList["*"].length;n++)this.eventList["*"](e);return this.eventList[t].length+this.eventList["*"].length}return this.eventList[t].length}},{key:"removeListener",value:function(t,e){if(this.eventList[t]){var r=this.eventList[t].indexOf(e);r>-1&&this.eventList.splice(r,1)}}}]),e}();o.util.EventEmitter=s;var a=function(t){function o(t){n(this,o);var r=e(this,(o.__proto__||Object.getPrototypeOf(o)).call(this));return r.name=t,r}return r(o,s),o}();o.Protocol=a;var u=[],c=[],l=function(o){function a(){n(this,a);var t=e(this,(a.__proto__||Object.getPrototypeOf(a)).call(this));return t.protocolList=u,t.playerList=[],t.playerProxyList=c,t.state=0,t}return r(a,s),t(a,[{key:"addProtocol",value:function(t){this.protocolList.push(t)}},{key:"getProtocol",value:function(t){return i.get(this.protocolList,t)}},{key:"removeProtocol",value:function(t){i.remove(this.protocolList,t)}},{key:"addPlayer",value:function(t){this.playerList.push(t)}},{key:"getPlayer",value:function(t){return i.get(this.playerList,t)}},{key:"removePlayer",value:function(t){i.remove(this.playerList,t)}},{key:"addPlayerProxy",value:function(t){this.playerProxyList.push(t)}},{key:"getPlayerProxy",value:function(t){return i.get(this.playerProxyList,t)}},{key:"removePlayerProxy",value:function(t){i.remove(this.playerProxyList,t)}},{key:"connect",value:function(t,e){var r=this;if(0!=this.state)throw new Error("Client is currently connected, must disconnect first before reconnecting.");var n=this.getProtocol(t);if(void 0==n||!n)throw new Error("No protocol of that name is loaded!");this.currentProtocol=n,this.state=1,n.connect(e,function(){1==r.state&&(r.state=2,r.currentProtocol.any(r.proxyEvents),r.currentProtocol.on("seturl",r.setURL))})}},{key:"proxyEvents",value:function(t,e){for(var r=0;r<this.playerProxyList;r++)this.playerProxyList.on(t,e);this.currentPlayer&&this.currentPlayer.on(t,e)}},{key:"proxyCommand",value:function(t,e){if(this.currentPlayer){for(var r=0;r<this.playerProxyList;r++)this.playerProxyList.command(t,e);this.currentPlayer.command(t,e)}}},{key:"setURL",value:function(t){if(this.currentPlayer&&this.currentPlayer.supports(t))this.proxyCommand("seturl",t);else{var e=this.playerList.find(function(e){return e.supports(t)});if(!e)throw new Error("No players to handle URL available");this.currentPlayer.command("terminate"),this.currentPlayer=e,this.proxyCommand("seturl",t)}}}],[{key:"addStaticProtocol",value:function(t){u.push(t)}},{key:"getStaticProtocol",value:function(t){return i.get(u,t)}},{key:"removeStaticProtocol",value:function(t){i.remove(u,t)}},{key:"addStaticPlayerProxy",value:function(t){c.push(t)}},{key:"getStaticPlayerProxy",value:function(t){return i.get(c,t)}},{key:"removeStaticPlayerProxy",value:function(t){i.remove(c,t)}}]),a}();o.Client=l,window.SyncPlay=o}();
//# sourceMappingURL=syncplay.min.js.map
