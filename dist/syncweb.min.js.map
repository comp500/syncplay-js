{"version":3,"sources":["syncweb.min.js","index.js","EventEmitter.js","WebSocketProtocol.js","export.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","SyncWeb","EventEmitter","this","eventList","activeEvents","value","name","callback","push","_this","on","modifiedCallback","data","removeListener","totalList","index","indexOf","splice","WebSocketProtocol","_EventEmitter","_this2","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","currentPosition","paused","doSeek","isReady","roomdetails","clientIgnoringOnTheFly","serverIgnoringOnTheFly","subClass","superClass","create","constructor","setPrototypeOf","_inherits","options","_this3","socket","WebSocket","url","addEventListener","password","sendHello","room","sendReady","sendListRequest","currentFile","sendFile","e","emit","messageText","parseMessage","_event","console","send","JSON","stringify","duration","sendState","message","_this4","parsed","parse","Error","Hello","serverDetails","version","realversion","features","motd","connectedString","Set","user","event","joined","left","file","ready","username","manuallyInitiated","List","State","ping","yourLatency","clientRtt","latencyCalculation","ignoringOnTheFly","server","stateChanged","playstate","setBy","currentUsername","position","Chat","clientIgnoreIsNotSet","output","currentRoom","packet","size","window"],"mappings":"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","file":"syncweb.min.js","sourcesContent":["(function() {\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable no-unused-vars */\nvar SyncWeb = {};\nSyncWeb.util = {};\n\nvar EventEmitter = function () {\n\tfunction EventEmitter() {\n\t\t_classCallCheck(this, EventEmitter);\n\n\t\tthis.eventList = {};\n\t\tthis.activeEvents = true;\n\t}\n\n\t_createClass(EventEmitter, [{\n\t\tkey: \"on\",\n\t\tvalue: function on(name, callback) {\n\t\t\tif (this.eventList[name] == null) {\n\t\t\t\tthis.eventList[name] = [];\n\t\t\t}\n\t\t\tthis.eventList[name].push(callback);\n\t\t}\n\t}, {\n\t\tkey: \"once\",\n\t\tvalue: function once(name, callback) {\n\t\t\tvar _this = this;\n\n\t\t\tvar modifiedCallback = function modifiedCallback(data) {\n\t\t\t\tcallback(data);\n\t\t\t\t_this.removeListener(name, modifiedCallback);\n\t\t\t};\n\t\t\tthis.on(name, modifiedCallback);\n\t\t}\n\t}, {\n\t\tkey: \"any\",\n\t\tvalue: function any(callback) {\n\t\t\tthis.on(\"*\", callback);\n\t\t}\n\t}, {\n\t\tkey: \"emit\",\n\t\tvalue: function emit(name, data) {\n\t\t\tif (!this.activeEvents) return 0;\n\n\t\t\tvar totalList = void 0;\n\t\t\tif (this.eventList[name] && this.eventList[\"*\"]) {\n\t\t\t\ttotalList = this.eventList[name].concat(this.eventList[\"*\"]);\n\t\t\t} else if (this.eventList[name]) {\n\t\t\t\ttotalList = this.eventList[name];\n\t\t\t} else if (this.eventList[\"*\"]) {\n\t\t\t\ttotalList = this.eventList[\"*\"];\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < totalList.length; i++) {\n\t\t\t\ttotalList[i](name, data);\n\t\t\t}\n\n\t\t\treturn totalList.length;\n\t\t}\n\t}, {\n\t\tkey: \"removeListener\",\n\t\tvalue: function removeListener(name, callback) {\n\t\t\t// TODO: find a way to gracefully report problems like this\n\t\t\tif (!this.eventList[name]) return;\n\n\t\t\tvar index = this.eventList[name].indexOf(callback);\n\t\t\tif (index > -1) this.eventList.splice(index, 1);\n\t\t}\n\t}]);\n\n\treturn EventEmitter;\n}();\n\nSyncWeb.util.EventEmitter = EventEmitter;\n/* global EventEmitter */\n\nvar WebSocketProtocol = function (_EventEmitter) {\n\t_inherits(WebSocketProtocol, _EventEmitter);\n\n\tfunction WebSocketProtocol() {\n\t\t_classCallCheck(this, WebSocketProtocol);\n\n\t\tvar _this2 = _possibleConstructorReturn(this, (WebSocketProtocol.__proto__ || Object.getPrototypeOf(WebSocketProtocol)).call(this, \"WebSocket-builtin\"));\n\n\t\t_this2.currentPosition = 0.0;\n\t\t_this2.paused = true;\n\t\t_this2.doSeek = false;\n\t\t_this2.isReady = false;\n\t\t_this2.roomdetails = {};\n\t\t_this2.clientIgnoringOnTheFly = 0;\n\t\t_this2.serverIgnoringOnTheFly = 0;\n\t\treturn _this2;\n\t}\n\n\t_createClass(WebSocketProtocol, [{\n\t\tkey: \"connect\",\n\t\tvalue: function connect(options, callback) {\n\t\t\tvar _this3 = this;\n\n\t\t\tthis.socket = new WebSocket(options.url);\n\n\t\t\tthis.socket.addEventListener(\"open\", function () {\n\t\t\t\tcallback();\n\t\t\t\tif (options.password) {\n\t\t\t\t\t_this3.sendHello(options.name, options.room, options.password);\n\t\t\t\t} else {\n\t\t\t\t\t_this3.sendHello(options.name, options.room);\n\t\t\t\t}\n\t\t\t\t_this3.sendReady();\n\t\t\t\t_this3.sendListRequest();\n\t\t\t\tif (_this3.currentFile) {\n\t\t\t\t\t_this3.sendFile();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.socket.addEventListener(\"message\", function (e) {\n\t\t\t\t_this3.emit(\"message\", e.data);\n\t\t\t\te.data.split(\"\\n\").forEach(function (messageText) {\n\t\t\t\t\tif (messageText == null) return;\n\t\t\t\t\tif (messageText.length < 1) return;\n\t\t\t\t\t_this3.parseMessage(messageText);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: \"event\",\n\t\tvalue: function event(_event, data) {\n\t\t\tconsole.log(\"event: \", _event, data); // eslint-disable-line no-console\n\t\t\tswitch (_event) {\n\t\t\t\tcase \"send\":\n\t\t\t\t\tthis.socket.send(JSON.stringify(data));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"setmeta\":\n\t\t\t\t\tthis.sendFile(data.duration, data.name);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"settime\":\n\t\t\t\t\tthis.currentPosition = data;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"seek\":\n\t\t\t\t\tthis.currentPosition = data;\n\t\t\t\t\tthis.doSeek = true;\n\t\t\t\t\tthis.sendState();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pause\":\n\t\t\t\t\tthis.paused = true;\n\t\t\t\t\tthis.sendState();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"unpause\":\n\t\t\t\t\tthis.paused = false;\n\t\t\t\t\tif (!this.isReady) {\n\t\t\t\t\t\t// potential problem: unpause is sent from video.play()\n\t\t\t\t\t\t// could result in unintentional ready setting\n\t\t\t\t\t\tthis.isReady = true;\n\t\t\t\t\t\tthis.sendReady();\n\t\t\t\t\t}\n\t\t\t\t\tthis.sendState();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"parseMessage\",\n\t\tvalue: function parseMessage(message) {\n\t\t\tvar _this4 = this;\n\n\t\t\tvar parsed = JSON.parse(message);\n\t\t\tconsole.log(\"SERVER:\", parsed); // eslint-disable-line no-console\n\n\t\t\tif (parsed.Error) {\n\t\t\t\tconsole.log(\"err\", parsed.Error); // eslint-disable-line no-console\n\t\t\t\t// TODO disconnect\n\t\t\t}\n\n\t\t\tif (parsed.Hello) {\n\t\t\t\tconsole.log(\"hello\", parsed.Hello); // eslint-disable-line no-console\n\t\t\t\t// TODO handle failed logins, etc.\n\t\t\t\tthis.serverDetails = {\n\t\t\t\t\tversion: parsed.Hello.version,\n\t\t\t\t\trealversion: parsed.Hello.realversion,\n\t\t\t\t\tfeatures: parsed.Hello.features,\n\t\t\t\t\tmotd: parsed.Hello.motd\n\t\t\t\t};\n\t\t\t\tvar connectedString = \"Connected to server, version \" + parsed.Hello.version + \".\";\n\t\t\t\tif (parsed.Hello.motd) {\n\t\t\t\t\tconnectedString += \" MOTD:\\n\\t\\t\\t\\t\" + parsed.Hello.motd;\n\t\t\t\t}\n\t\t\t\tthis.emit(\"connected\", connectedString);\n\t\t\t\t// roomEventRequest?\n\t\t\t}\n\n\t\t\tif (parsed.Set) {\n\t\t\t\tconsole.log(\"set\", parsed.Set); // eslint-disable-line no-console\n\t\t\t\t// TODO playlists\n\t\t\t\tif (parsed.Set.user) {\n\t\t\t\t\tObject.keys(parsed.Set.user).forEach(function (key) {\n\t\t\t\t\t\tvar user = parsed.Set.user[key];\n\t\t\t\t\t\tif (user.event) {\n\t\t\t\t\t\t\tif (user.event.joined) {\n\t\t\t\t\t\t\t\t_this4.emit(\"joined\", key);\n\t\t\t\t\t\t\t\t_this4.roomdetails[key] = { room: user.room.name };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (user.event.left) {\n\t\t\t\t\t\t\t\t_this4.emit(\"left\", key);\n\t\t\t\t\t\t\t\tdelete _this4.roomdetails[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_this4.roomdetails[key] && _this4.roomdetails[key].room != user.room.name) {\n\t\t\t\t\t\t\t\t// user has moved\n\t\t\t\t\t\t\t\t_this4.roomdetails[key].room = user.room.name;\n\t\t\t\t\t\t\t\t_this4.emit(\"moved\", { \"user\": key, \"room\": user.room.name });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (user.file) {\n\t\t\t\t\t\t\t_this4.roomdetails[key].file = user.file;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_this4.emit(\"roomdetails\", _this4.roomdetails);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (parsed.Set.ready) {\n\t\t\t\t\tthis.roomdetails[parsed.Set.ready.username].isReady = parsed.Set.ready.isReady;\n\t\t\t\t\tthis.roomdetails[parsed.Set.ready.username].manuallyInitiated = parsed.Set.ready.manuallyInitiated;\n\n\t\t\t\t\tthis.emit(\"roomdetails\", this.roomdetails);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parsed.List) {\n\t\t\t\tthis.roomdetails = {};\n\t\t\t\tObject.keys(parsed.List).forEach(function (room) {\n\t\t\t\t\tObject.keys(parsed.List[room]).forEach(function (user) {\n\t\t\t\t\t\t_this4.roomdetails[user] = parsed.List[room][user];\n\t\t\t\t\t\t_this4.roomdetails[user].room = room;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis.emit(\"roomdetails\", parsed.List);\n\t\t\t}\n\n\t\t\tif (parsed.State) {\n\t\t\t\tif (parsed.State.ping.yourLatency != null) {\n\t\t\t\t\tthis.clientRtt = parsed.State.ping.yourLatency;\n\t\t\t\t}\n\t\t\t\tthis.latencyCalculation = parsed.State.ping.latencyCalculation;\n\t\t\t\tif (parsed.State.ignoringOnTheFly && parsed.State.ignoringOnTheFly.server) {\n\t\t\t\t\tthis.serverIgnoringOnTheFly = parsed.State.ignoringOnTheFly.server;\n\t\t\t\t\tthis.clientIgnoringOnTheFly = 0;\n\t\t\t\t\tthis.stateChanged = false;\n\t\t\t\t}\n\t\t\t\tif (parsed.State.playstate) {\n\t\t\t\t\tif (parsed.State.playstate.setBy && parsed.State.playstate.setBy != this.currentUsername) {\n\t\t\t\t\t\tif (parsed.State.playstate.doSeek && !this.doSeek) {\n\t\t\t\t\t\t\tthis.emit(\"seek\", parsed.State.playstate.position);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.paused != parsed.State.playstate.paused) {\n\t\t\t\t\t\t\tif (parsed.State.playstate.paused) {\n\t\t\t\t\t\t\t\tthis.emit(\"pause\");\n\t\t\t\t\t\t\t\tthis.paused = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.emit(\"unpause\");\n\t\t\t\t\t\t\t\tthis.paused = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parsed.Chat) {\n\t\t\t\tthis.emit(\"chat\", {\n\t\t\t\t\tname: parsed.Chat.username,\n\t\t\t\t\tmessage: parsed.Chat.message\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.sendState();\n\t\t}\n\t}, {\n\t\tkey: \"sendState\",\n\t\tvalue: function sendState() {\n\t\t\tvar clientIgnoreIsNotSet = this.clientIgnoringOnTheFly == 0 || this.serverIgnoringOnTheFly != 0;\n\t\t\tvar output = {};\n\t\t\toutput.State = {};\n\n\t\t\tif (clientIgnoreIsNotSet) {\n\t\t\t\toutput.State.playstate = {};\n\t\t\t\toutput.State.playstate.position = this.currentPosition;\n\t\t\t\toutput.State.playstate.paused = this.paused;\n\t\t\t\tif (this.doSeek) {\n\t\t\t\t\toutput.State.playstate.doSeek = true;\n\t\t\t\t\tthis.doSeek = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toutput.State.ping = {};\n\t\t\toutput.State.ping.latencyCalculation = this.latencyCalculation;\n\t\t\toutput.State.ping.clientLatencyCalculation = Date.now() / 1000;\n\t\t\toutput.State.ping.clientRtt = this.clientRtt;\n\n\t\t\tif (this.stateChanged) {\n\t\t\t\t// TODO update this properly\n\t\t\t\tthis.clientIgnoringOnTheFly += 1;\n\t\t\t}\n\n\t\t\tif (this.serverIgnoringOnTheFly > 0 || this.clientIgnoringOnTheFly > 0) {\n\t\t\t\toutput.State.ignoringOnTheFly = {};\n\t\t\t\tif (this.serverIgnoringOnTheFly > 0) {\n\t\t\t\t\toutput.State.ignoringOnTheFly.server = this.serverIgnoringOnTheFly;\n\t\t\t\t\tthis.serverIgnoringOnTheFly = 0;\n\t\t\t\t}\n\t\t\t\tif (this.clientIgnoringOnTheFly > 0) {\n\t\t\t\t\toutput.State.ignoringOnTheFly.client = this.clientIgnoringOnTheFly;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.log(output); // eslint-disable-line no-console\n\n\t\t\tthis.event(\"send\", output);\n\t\t}\n\t}, {\n\t\tkey: \"sendHello\",\n\t\tvalue: function sendHello(username, room, password) {\n\t\t\tthis.currentUsername = username;\n\t\t\tthis.currentRoom = room;\n\n\t\t\tvar packet = {\n\t\t\t\t\"Hello\": {\n\t\t\t\t\tusername: username,\n\t\t\t\t\t\"room\": {\n\t\t\t\t\t\tname: room\n\t\t\t\t\t},\n\t\t\t\t\t\"version\": \"1.5.1\"\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (password) {\n\t\t\t\tpacket.Hello.password = password;\n\t\t\t}\n\n\t\t\tthis.event(\"send\", packet);\n\t\t}\n\t}, {\n\t\tkey: \"sendListRequest\",\n\t\tvalue: function sendListRequest() {\n\t\t\tthis.event(\"send\", { \"List\": null });\n\t\t}\n\t}, {\n\t\tkey: \"sendReady\",\n\t\tvalue: function sendReady() {\n\t\t\tvar packet = {\n\t\t\t\t\"Set\": {\n\t\t\t\t\t\"ready\": {\n\t\t\t\t\t\tisReady: this.isReady,\n\t\t\t\t\t\tmanuallyInitiated: true,\n\t\t\t\t\t\tusername: this.currentUsername\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.event(\"send\", packet);\n\t\t}\n\t}, {\n\t\tkey: \"sendFile\",\n\t\tvalue: function sendFile(duration, name) {\n\t\t\tif (name) {\n\t\t\t\t// TODO size attribute for non-html5 video players?\n\t\t\t\t// 0 means unknown duration\n\t\t\t\tif (!duration) duration = 0;\n\t\t\t\tthis.currentFile = { duration: duration, name: name, size: 0 };\n\t\t\t}\n\t\t\tthis.event(\"send\", {\n\t\t\t\t\"Set\": {\n\t\t\t\t\tfile: this.currentFile\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.sendListRequest();\n\t\t}\n\t}]);\n\n\treturn WebSocketProtocol;\n}(EventEmitter);\n\nSyncWeb.Client = WebSocketProtocol;\nwindow.SyncWeb = SyncWeb;\n}());\n","/* eslint-disable no-unused-vars */\r\nlet SyncWeb = {};\r\nSyncWeb.util = {};","class EventEmitter {\r\n\tconstructor() {\r\n\t\tthis.eventList = {};\r\n\t\tthis.activeEvents = true;\r\n\t}\r\n\r\n\ton(name, callback) {\r\n\t\tif (this.eventList[name] == null) {\r\n\t\t\tthis.eventList[name] = [];\r\n\t\t}\r\n\t\tthis.eventList[name].push(callback);\r\n\t}\r\n\r\n\tonce(name, callback) {\r\n\t\tlet modifiedCallback = (data) => {\r\n\t\t\tcallback(data);\r\n\t\t\tthis.removeListener(name, modifiedCallback);\r\n\t\t};\r\n\t\tthis.on(name, modifiedCallback);\r\n\t}\r\n\r\n\tany(callback) {\r\n\t\tthis.on(\"*\", callback);\r\n\t}\r\n\r\n\temit(name, data) {\r\n\t\tif (!this.activeEvents) return 0;\r\n\r\n\t\tlet totalList;\r\n\t\tif (this.eventList[name] && this.eventList[\"*\"]) {\r\n\t\t\ttotalList = this.eventList[name].concat(this.eventList[\"*\"]);\r\n\t\t} else if (this.eventList[name]) {\r\n\t\t\ttotalList = this.eventList[name];\r\n\t\t} else if (this.eventList[\"*\"]) {\r\n\t\t\ttotalList = this.eventList[\"*\"]\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < totalList.length; i++) {\r\n\t\t\ttotalList[i](name, data);\r\n\t\t}\r\n\r\n\t\treturn totalList.length;\r\n\t}\r\n\r\n\tremoveListener(name, callback) {\r\n\t\t// TODO: find a way to gracefully report problems like this\r\n\t\tif (!this.eventList[name]) return;\r\n\r\n\t\tlet index = this.eventList[name].indexOf(callback);\r\n\t\tif (index > -1) this.eventList.splice(index, 1);\r\n\t}\r\n}\r\n\r\nSyncWeb.util.EventEmitter = EventEmitter;","/* global EventEmitter */\r\n\r\nclass WebSocketProtocol extends EventEmitter {\r\n\tconstructor() {\r\n\t\tsuper(\"WebSocket-builtin\");\r\n\r\n\t\tthis.currentPosition = 0.0;\r\n\t\tthis.paused = true;\r\n\t\tthis.doSeek = false;\r\n\t\tthis.isReady = false;\r\n\t\tthis.roomdetails = {};\r\n\t\tthis.clientIgnoringOnTheFly = 0;\r\n\t\tthis.serverIgnoringOnTheFly = 0;\r\n\t}\r\n\r\n\tconnect(options, callback) {\r\n\t\tthis.socket = new WebSocket(options.url);\r\n\r\n\t\tthis.socket.addEventListener(\"open\", () => {\r\n\t\t\tcallback();\r\n\t\t\tif (options.password) {\r\n\t\t\t\tthis.sendHello(options.name, options.room, options.password);\r\n\t\t\t} else {\r\n\t\t\t\tthis.sendHello(options.name, options.room);\r\n\t\t\t}\r\n\t\t\tthis.sendReady();\r\n\t\t\tthis.sendListRequest();\r\n\t\t\tif (this.currentFile) {\r\n\t\t\t\tthis.sendFile();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.socket.addEventListener(\"message\", (e) => {\r\n\t\t\tthis.emit(\"message\", e.data);\r\n\t\t\te.data.split(\"\\n\").forEach(messageText => {\r\n\t\t\t\tif (messageText == null) return;\r\n\t\t\t\tif (messageText.length < 1) return;\r\n\t\t\t\tthis.parseMessage(messageText);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tevent(event, data) {\r\n\t\tconsole.log(\"event: \", event, data); // eslint-disable-line no-console\r\n\t\tswitch (event) {\r\n\t\t\tcase \"send\":\r\n\t\t\t\tthis.socket.send(JSON.stringify(data));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"setmeta\":\r\n\t\t\t\tthis.sendFile(data.duration, data.name);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"settime\":\r\n\t\t\t\tthis.currentPosition = data;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"seek\":\r\n\t\t\t\tthis.currentPosition = data;\r\n\t\t\t\tthis.doSeek = true;\r\n\t\t\t\tthis.sendState();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pause\":\r\n\t\t\t\tthis.paused = true;\r\n\t\t\t\tthis.sendState();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"unpause\":\r\n\t\t\t\tthis.paused = false;\r\n\t\t\t\tif (!this.isReady) {\r\n\t\t\t\t\t// potential problem: unpause is sent from video.play()\r\n\t\t\t\t\t// could result in unintentional ready setting\r\n\t\t\t\t\tthis.isReady = true;\r\n\t\t\t\t\tthis.sendReady();\r\n\t\t\t\t}\r\n\t\t\t\tthis.sendState();\r\n\t\t}\r\n\t}\r\n\r\n\tparseMessage(message) {\r\n\t\tlet parsed = JSON.parse(message);\r\n\t\tconsole.log(\"SERVER:\", parsed); // eslint-disable-line no-console\r\n\r\n\t\tif (parsed.Error) {\r\n\t\t\tconsole.log(\"err\", parsed.Error); // eslint-disable-line no-console\r\n\t\t\t// TODO disconnect\r\n\t\t}\r\n\r\n\t\tif (parsed.Hello) {\r\n\t\t\tconsole.log(\"hello\", parsed.Hello); // eslint-disable-line no-console\r\n\t\t\t// TODO handle failed logins, etc.\r\n\t\t\tthis.serverDetails = {\r\n\t\t\t\tversion: parsed.Hello.version,\r\n\t\t\t\trealversion: parsed.Hello.realversion,\r\n\t\t\t\tfeatures: parsed.Hello.features,\r\n\t\t\t\tmotd: parsed.Hello.motd\r\n\t\t\t};\r\n\t\t\tlet connectedString = `Connected to server, version ${parsed.Hello.version}.`;\r\n\t\t\tif (parsed.Hello.motd) {\r\n\t\t\t\tconnectedString += ` MOTD:\r\n\t\t\t\t${parsed.Hello.motd}`;\r\n\t\t\t}\r\n\t\t\tthis.emit(\"connected\", connectedString);\r\n\t\t\t// roomEventRequest?\r\n\t\t}\r\n\r\n\t\tif (parsed.Set) {\r\n\t\t\tconsole.log(\"set\", parsed.Set); // eslint-disable-line no-console\r\n\t\t\t// TODO playlists\r\n\t\t\tif (parsed.Set.user) {\r\n\t\t\t\tObject.keys(parsed.Set.user).forEach((key) => {\r\n\t\t\t\t\tlet user = parsed.Set.user[key];\r\n\t\t\t\t\tif (user.event) {\r\n\t\t\t\t\t\tif (user.event.joined) {\r\n\t\t\t\t\t\t\tthis.emit(\"joined\", key);\r\n\t\t\t\t\t\t\tthis.roomdetails[key] = {room: user.room.name};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (user.event.left) {\r\n\t\t\t\t\t\t\tthis.emit(\"left\", key);\r\n\t\t\t\t\t\t\tdelete this.roomdetails[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (this.roomdetails[key] && this.roomdetails[key].room != user.room.name) {\r\n\t\t\t\t\t\t\t// user has moved\r\n\t\t\t\t\t\t\tthis.roomdetails[key].room = user.room.name;\r\n\t\t\t\t\t\t\tthis.emit(\"moved\", {\"user\": key, \"room\": user.room.name});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (user.file) {\r\n\t\t\t\t\t\tthis.roomdetails[key].file = user.file;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.emit(\"roomdetails\", this.roomdetails);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (parsed.Set.ready) {\r\n\t\t\t\tthis.roomdetails[parsed.Set.ready.username].isReady = parsed.Set.ready.isReady;\r\n\t\t\t\tthis.roomdetails[parsed.Set.ready.username].manuallyInitiated = parsed.Set.ready.manuallyInitiated;\r\n\r\n\t\t\t\tthis.emit(\"roomdetails\", this.roomdetails);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (parsed.List) {\r\n\t\t\tthis.roomdetails = {};\r\n\t\t\tObject.keys(parsed.List).forEach((room) => {\r\n\t\t\t\tObject.keys(parsed.List[room]).forEach((user) => {\r\n\t\t\t\t\tthis.roomdetails[user] = parsed.List[room][user];\r\n\t\t\t\t\tthis.roomdetails[user].room = room;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.emit(\"roomdetails\", parsed.List);\r\n\t\t}\r\n\r\n\t\tif (parsed.State) {\r\n\t\t\tif (parsed.State.ping.yourLatency != null) {\r\n\t\t\t\tthis.clientRtt = parsed.State.ping.yourLatency;\r\n\t\t\t}\r\n\t\t\tthis.latencyCalculation = parsed.State.ping.latencyCalculation;\r\n\t\t\tif (parsed.State.ignoringOnTheFly && parsed.State.ignoringOnTheFly.server) {\r\n\t\t\t\tthis.serverIgnoringOnTheFly = parsed.State.ignoringOnTheFly.server;\r\n\t\t\t\tthis.clientIgnoringOnTheFly = 0;\r\n\t\t\t\tthis.stateChanged = false;\r\n\t\t\t}\r\n\t\t\tif (parsed.State.playstate) {\r\n\t\t\t\tif (parsed.State.playstate.setBy && parsed.State.playstate.setBy != this.currentUsername) {\r\n\t\t\t\t\tif (parsed.State.playstate.doSeek && !this.doSeek) {\r\n\t\t\t\t\t\tthis.emit(\"seek\", parsed.State.playstate.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.paused != parsed.State.playstate.paused) {\r\n\t\t\t\t\t\tif (parsed.State.playstate.paused) {\r\n\t\t\t\t\t\t\tthis.emit(\"pause\");\r\n\t\t\t\t\t\t\tthis.paused = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.emit(\"unpause\");\r\n\t\t\t\t\t\t\tthis.paused = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (parsed.Chat) {\r\n\t\t\tthis.emit(\"chat\", {\r\n\t\t\t\tname: parsed.Chat.username,\r\n\t\t\t\tmessage: parsed.Chat.message\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.sendState();\r\n\t}\r\n\r\n\tsendState() {\r\n\t\tlet clientIgnoreIsNotSet = (this.clientIgnoringOnTheFly == 0 || this.serverIgnoringOnTheFly != 0);\r\n\t\tlet output = {};\r\n\t\toutput.State = {};\r\n\r\n\t\tif (clientIgnoreIsNotSet) {\r\n\t\t\toutput.State.playstate = {};\r\n\t\t\toutput.State.playstate.position = this.currentPosition;\r\n\t\t\toutput.State.playstate.paused = this.paused;\r\n\t\t\tif (this.doSeek) {\r\n\t\t\t\toutput.State.playstate.doSeek = true;\r\n\t\t\t\tthis.doSeek = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\toutput.State.ping = {};\r\n\t\toutput.State.ping.latencyCalculation = this.latencyCalculation;\r\n\t\toutput.State.ping.clientLatencyCalculation = Date.now() / 1000;\r\n\t\toutput.State.ping.clientRtt = this.clientRtt;\r\n\r\n\t\tif (this.stateChanged) { // TODO update this properly\r\n\t\t\tthis.clientIgnoringOnTheFly += 1;\r\n\t\t}\r\n\r\n\t\tif (this.serverIgnoringOnTheFly > 0 || this.clientIgnoringOnTheFly > 0) {\r\n\t\t\toutput.State.ignoringOnTheFly = {};\r\n\t\t\tif (this.serverIgnoringOnTheFly > 0) {\r\n\t\t\t\toutput.State.ignoringOnTheFly.server = this.serverIgnoringOnTheFly;\r\n\t\t\t\tthis.serverIgnoringOnTheFly = 0;\r\n\t\t\t}\r\n\t\t\tif (this.clientIgnoringOnTheFly > 0) {\r\n\t\t\t\toutput.State.ignoringOnTheFly.client = this.clientIgnoringOnTheFly;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.log(output); // eslint-disable-line no-console\r\n\r\n\t\tthis.event(\"send\", output);\r\n\t}\r\n\r\n\tsendHello(username, room, password) {\r\n\t\tthis.currentUsername = username;\r\n\t\tthis.currentRoom = room;\r\n\r\n\t\tlet packet = {\r\n\t\t\t\"Hello\": {\r\n\t\t\t\tusername,\r\n\t\t\t\t\"room\": {\r\n\t\t\t\t\tname: room\r\n\t\t\t\t},\r\n\t\t\t\t\"version\": \"1.5.1\"\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (password) {\r\n\t\t\tpacket.Hello.password = password;\r\n\t\t}\r\n\r\n\t\tthis.event(\"send\", packet);\r\n\t}\r\n\r\n\tsendListRequest() {\r\n\t\tthis.event(\"send\", {\"List\": null});\r\n\t}\r\n\r\n\tsendReady() {\r\n\t\tlet packet = {\r\n\t\t\t\"Set\": {\r\n\t\t\t\t\"ready\": {\r\n\t\t\t\t\tisReady: this.isReady,\r\n\t\t\t\t\tmanuallyInitiated: true,\r\n\t\t\t\t\tusername: this.currentUsername\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.event(\"send\", packet);\r\n\t}\r\n\r\n\tsendFile(duration, name) {\r\n\t\tif (name) {\r\n\t\t\t// TODO size attribute for non-html5 video players?\r\n\t\t\t// 0 means unknown duration\r\n\t\t\tif (!duration) duration = 0;\r\n\t\t\tthis.currentFile = {duration, name, size: 0};\r\n\t\t}\r\n\t\tthis.event(\"send\", {\r\n\t\t\t\"Set\": {\r\n\t\t\t\tfile: this.currentFile\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.sendListRequest();\r\n\t}\r\n}\r\n\r\nSyncWeb.Client = WebSocketProtocol;","window.SyncWeb = SyncWeb;"]}